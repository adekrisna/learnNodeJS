第 1 章 Node.js 介绍
全新的 JavaScript 开发框架 ———— Node.js

- 什么是 Node.js 框架
- 下载
- 模块
- 示例

1.1 Node.js 概述

1.1.1 使用 Node.js 能够解决什么问题
Note: 瓶颈, 服务器所支持的最大同时连接用户量

一般服务器为客户端连接创建一个新的线程（2MB）
Node.js 为每一个客户端连接触发一个事件

Note: 支持大量用户并发连接

1.1.2 实现高性能服务器
Node.js 是一个用于开发各种 Web 服务器的开发工具。

V8 JavaScript 脚本语言
可以运行在服务器端的 JavaScript 脚本语言
Google C++ 语言开发
全新的编译技术，执行效率高


1.1.3 非阻塞型 I/O及事件环机制
单线程
死锁现象？
在一个时刻，只能执行一个事件的回调函数，
但在执行一个事件回调函数的中途，可以转而处理其他事件

1.1.4 Node.js 适合开发的应用程序
当应用程序需要处理大量并发的输入/输出，
而在向客户端发出响应之前，
应用程序内部不需要进行非常复杂的处理的时候
- 聊天服务器
- 综合服务类网站或电子商务网站的服务器


1.2 安装 Node.js
nodejs.org

1.3 Node.js 中的模块

Node.js 以模块为单位划分所有功能，
每一个模块为一个 JS 文件

变量和函数的作用范围被局限在模块范围，
exports.add = function(){}
require()

内置模块直接引用

Node.js 追加的类、函数、对象
- Buffer 类
- setTimeout 函数
- clearTimeout 函数
- setInterval 函数
- clearInterval 函数
- require 函数
- module 对象
- process 对象

第三方模块


1.4 一个简单的示例应用程序

1.5 小结


